// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: enums.proto

package cases

import (
	other_package "github.com/protoconf/proto-validate-reflect/cases/other_package"
	_ "github.com/protoconf/proto-validate-reflect/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestEnum int32

const (
	TestEnum_ZERO TestEnum = 0
	TestEnum_ONE  TestEnum = 1
	TestEnum_TWO  TestEnum = 2
)

// Enum value maps for TestEnum.
var (
	TestEnum_name = map[int32]string{
		0: "ZERO",
		1: "ONE",
		2: "TWO",
	}
	TestEnum_value = map[string]int32{
		"ZERO": 0,
		"ONE":  1,
		"TWO":  2,
	}
)

func (x TestEnum) Enum() *TestEnum {
	p := new(TestEnum)
	*p = x
	return p
}

func (x TestEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[0].Descriptor()
}

func (TestEnum) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[0]
}

func (x TestEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TestEnum.Descriptor instead.
func (TestEnum) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{0}
}

type TestEnumAlias int32

const (
	TestEnumAlias_A     TestEnumAlias = 0
	TestEnumAlias_B     TestEnumAlias = 1
	TestEnumAlias_C     TestEnumAlias = 2
	TestEnumAlias_ALPHA TestEnumAlias = 0
	TestEnumAlias_BETA  TestEnumAlias = 1
	TestEnumAlias_GAMMA TestEnumAlias = 2
)

// Enum value maps for TestEnumAlias.
var (
	TestEnumAlias_name = map[int32]string{
		0: "A",
		1: "B",
		2: "C",
		// Duplicate value: 0: "ALPHA",
		// Duplicate value: 1: "BETA",
		// Duplicate value: 2: "GAMMA",
	}
	TestEnumAlias_value = map[string]int32{
		"A":     0,
		"B":     1,
		"C":     2,
		"ALPHA": 0,
		"BETA":  1,
		"GAMMA": 2,
	}
)

func (x TestEnumAlias) Enum() *TestEnumAlias {
	p := new(TestEnumAlias)
	*p = x
	return p
}

func (x TestEnumAlias) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestEnumAlias) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[1].Descriptor()
}

func (TestEnumAlias) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[1]
}

func (x TestEnumAlias) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TestEnumAlias.Descriptor instead.
func (TestEnumAlias) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{1}
}

type EnumNone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val TestEnum `protobuf:"varint,1,opt,name=val,proto3,enum=tests.harness.cases.TestEnum" json:"val,omitempty"`
}

func (x *EnumNone) Reset() {
	*x = EnumNone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumNone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumNone) ProtoMessage() {}

func (x *EnumNone) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumNone.ProtoReflect.Descriptor instead.
func (*EnumNone) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{0}
}

func (x *EnumNone) GetVal() TestEnum {
	if x != nil {
		return x.Val
	}
	return TestEnum_ZERO
}

type EnumConst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val TestEnum `protobuf:"varint,1,opt,name=val,proto3,enum=tests.harness.cases.TestEnum" json:"val,omitempty"`
}

func (x *EnumConst) Reset() {
	*x = EnumConst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumConst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumConst) ProtoMessage() {}

func (x *EnumConst) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumConst.ProtoReflect.Descriptor instead.
func (*EnumConst) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{1}
}

func (x *EnumConst) GetVal() TestEnum {
	if x != nil {
		return x.Val
	}
	return TestEnum_ZERO
}

type EnumAliasConst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val TestEnumAlias `protobuf:"varint,1,opt,name=val,proto3,enum=tests.harness.cases.TestEnumAlias" json:"val,omitempty"`
}

func (x *EnumAliasConst) Reset() {
	*x = EnumAliasConst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumAliasConst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumAliasConst) ProtoMessage() {}

func (x *EnumAliasConst) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumAliasConst.ProtoReflect.Descriptor instead.
func (*EnumAliasConst) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{2}
}

func (x *EnumAliasConst) GetVal() TestEnumAlias {
	if x != nil {
		return x.Val
	}
	return TestEnumAlias_A
}

type EnumDefined struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val TestEnum `protobuf:"varint,1,opt,name=val,proto3,enum=tests.harness.cases.TestEnum" json:"val,omitempty"`
}

func (x *EnumDefined) Reset() {
	*x = EnumDefined{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumDefined) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumDefined) ProtoMessage() {}

func (x *EnumDefined) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumDefined.ProtoReflect.Descriptor instead.
func (*EnumDefined) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{3}
}

func (x *EnumDefined) GetVal() TestEnum {
	if x != nil {
		return x.Val
	}
	return TestEnum_ZERO
}

type EnumAliasDefined struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val TestEnumAlias `protobuf:"varint,1,opt,name=val,proto3,enum=tests.harness.cases.TestEnumAlias" json:"val,omitempty"`
}

func (x *EnumAliasDefined) Reset() {
	*x = EnumAliasDefined{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumAliasDefined) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumAliasDefined) ProtoMessage() {}

func (x *EnumAliasDefined) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumAliasDefined.ProtoReflect.Descriptor instead.
func (*EnumAliasDefined) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{4}
}

func (x *EnumAliasDefined) GetVal() TestEnumAlias {
	if x != nil {
		return x.Val
	}
	return TestEnumAlias_A
}

type EnumIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val TestEnum `protobuf:"varint,1,opt,name=val,proto3,enum=tests.harness.cases.TestEnum" json:"val,omitempty"`
}

func (x *EnumIn) Reset() {
	*x = EnumIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumIn) ProtoMessage() {}

func (x *EnumIn) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumIn.ProtoReflect.Descriptor instead.
func (*EnumIn) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{5}
}

func (x *EnumIn) GetVal() TestEnum {
	if x != nil {
		return x.Val
	}
	return TestEnum_ZERO
}

type EnumAliasIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val TestEnumAlias `protobuf:"varint,1,opt,name=val,proto3,enum=tests.harness.cases.TestEnumAlias" json:"val,omitempty"`
}

func (x *EnumAliasIn) Reset() {
	*x = EnumAliasIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumAliasIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumAliasIn) ProtoMessage() {}

func (x *EnumAliasIn) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumAliasIn.ProtoReflect.Descriptor instead.
func (*EnumAliasIn) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{6}
}

func (x *EnumAliasIn) GetVal() TestEnumAlias {
	if x != nil {
		return x.Val
	}
	return TestEnumAlias_A
}

type EnumNotIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val TestEnum `protobuf:"varint,1,opt,name=val,proto3,enum=tests.harness.cases.TestEnum" json:"val,omitempty"`
}

func (x *EnumNotIn) Reset() {
	*x = EnumNotIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumNotIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumNotIn) ProtoMessage() {}

func (x *EnumNotIn) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumNotIn.ProtoReflect.Descriptor instead.
func (*EnumNotIn) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{7}
}

func (x *EnumNotIn) GetVal() TestEnum {
	if x != nil {
		return x.Val
	}
	return TestEnum_ZERO
}

type EnumAliasNotIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val TestEnumAlias `protobuf:"varint,1,opt,name=val,proto3,enum=tests.harness.cases.TestEnumAlias" json:"val,omitempty"`
}

func (x *EnumAliasNotIn) Reset() {
	*x = EnumAliasNotIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumAliasNotIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumAliasNotIn) ProtoMessage() {}

func (x *EnumAliasNotIn) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumAliasNotIn.ProtoReflect.Descriptor instead.
func (*EnumAliasNotIn) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{8}
}

func (x *EnumAliasNotIn) GetVal() TestEnumAlias {
	if x != nil {
		return x.Val
	}
	return TestEnumAlias_A
}

type EnumExternal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val other_package.Embed_Enumerated `protobuf:"varint,1,opt,name=val,proto3,enum=tests.harness.cases.other_package.Embed_Enumerated" json:"val,omitempty"`
}

func (x *EnumExternal) Reset() {
	*x = EnumExternal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumExternal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumExternal) ProtoMessage() {}

func (x *EnumExternal) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumExternal.ProtoReflect.Descriptor instead.
func (*EnumExternal) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{9}
}

func (x *EnumExternal) GetVal() other_package.Embed_Enumerated {
	if x != nil {
		return x.Val
	}
	return other_package.Embed_Enumerated(0)
}

type RepeatedEnumDefined struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val []TestEnum `protobuf:"varint,1,rep,packed,name=val,proto3,enum=tests.harness.cases.TestEnum" json:"val,omitempty"`
}

func (x *RepeatedEnumDefined) Reset() {
	*x = RepeatedEnumDefined{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedEnumDefined) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedEnumDefined) ProtoMessage() {}

func (x *RepeatedEnumDefined) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedEnumDefined.ProtoReflect.Descriptor instead.
func (*RepeatedEnumDefined) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{10}
}

func (x *RepeatedEnumDefined) GetVal() []TestEnum {
	if x != nil {
		return x.Val
	}
	return nil
}

type RepeatedExternalEnumDefined struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val []other_package.Embed_Enumerated `protobuf:"varint,1,rep,packed,name=val,proto3,enum=tests.harness.cases.other_package.Embed_Enumerated" json:"val,omitempty"`
}

func (x *RepeatedExternalEnumDefined) Reset() {
	*x = RepeatedExternalEnumDefined{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedExternalEnumDefined) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedExternalEnumDefined) ProtoMessage() {}

func (x *RepeatedExternalEnumDefined) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedExternalEnumDefined.ProtoReflect.Descriptor instead.
func (*RepeatedExternalEnumDefined) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{11}
}

func (x *RepeatedExternalEnumDefined) GetVal() []other_package.Embed_Enumerated {
	if x != nil {
		return x.Val
	}
	return nil
}

type MapEnumDefined struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val map[string]TestEnum `protobuf:"bytes,1,rep,name=val,proto3" json:"val,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=tests.harness.cases.TestEnum"`
}

func (x *MapEnumDefined) Reset() {
	*x = MapEnumDefined{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapEnumDefined) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapEnumDefined) ProtoMessage() {}

func (x *MapEnumDefined) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapEnumDefined.ProtoReflect.Descriptor instead.
func (*MapEnumDefined) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{12}
}

func (x *MapEnumDefined) GetVal() map[string]TestEnum {
	if x != nil {
		return x.Val
	}
	return nil
}

type MapExternalEnumDefined struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val map[string]other_package.Embed_Enumerated `protobuf:"bytes,1,rep,name=val,proto3" json:"val,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=tests.harness.cases.other_package.Embed_Enumerated"`
}

func (x *MapExternalEnumDefined) Reset() {
	*x = MapExternalEnumDefined{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapExternalEnumDefined) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapExternalEnumDefined) ProtoMessage() {}

func (x *MapExternalEnumDefined) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapExternalEnumDefined.ProtoReflect.Descriptor instead.
func (*MapExternalEnumDefined) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{13}
}

func (x *MapExternalEnumDefined) GetVal() map[string]other_package.Embed_Enumerated {
	if x != nil {
		return x.Val
	}
	return nil
}

var File_enums_proto protoreflect.FileDescriptor

var file_enums_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x74,
	0x65, 0x73, 0x74, 0x73, 0x2e, 0x68, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x61, 0x73,
	0x65, 0x73, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2f, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x08, 0x45, 0x6e, 0x75, 0x6d, 0x4e, 0x6f,
	0x6e, 0x65, 0x12, 0x2f, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x68, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x03,
	0x76, 0x61, 0x6c, 0x22, 0x46, 0x0a, 0x09, 0x45, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x12, 0x39, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x68, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x61,
	0x73, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x82, 0x01, 0x02, 0x08, 0x02, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x50, 0x0a, 0x0e, 0x45,
	0x6e, 0x75, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x12, 0x3e, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x68, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73,
	0x2e, 0x54, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x08, 0x02, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x48, 0x0a,
	0x0b, 0x45, 0x6e, 0x75, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x03,
	0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x68, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e,
	0x54, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x52, 0x0a, 0x10, 0x45, 0x6e, 0x75, 0x6d, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x03, 0x76,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73,
	0x2e, 0x68, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x54,
	0x65, 0x73, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x45, 0x0a, 0x06, 0x45,
	0x6e, 0x75, 0x6d, 0x49, 0x6e, 0x12, 0x3b, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x68, 0x61, 0x72, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x75,
	0x6d, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82, 0x01, 0x04, 0x18, 0x00, 0x18, 0x02, 0x52, 0x03, 0x76,
	0x61, 0x6c, 0x22, 0x4f, 0x0a, 0x0b, 0x45, 0x6e, 0x75, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x49,
	0x6e, 0x12, 0x40, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x68, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x63,
	0x61, 0x73, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x41, 0x6c, 0x69,
	0x61, 0x73, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82, 0x01, 0x04, 0x18, 0x00, 0x18, 0x02, 0x52, 0x03,
	0x76, 0x61, 0x6c, 0x22, 0x46, 0x0a, 0x09, 0x45, 0x6e, 0x75, 0x6d, 0x4e, 0x6f, 0x74, 0x49, 0x6e,
	0x12, 0x39, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x68, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x61,
	0x73, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x82, 0x01, 0x02, 0x20, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x50, 0x0a, 0x0e, 0x45,
	0x6e, 0x75, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x12, 0x3e, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x68, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73,
	0x2e, 0x54, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x20, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x5f, 0x0a,
	0x0c, 0x45, 0x6e, 0x75, 0x6d, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x4f, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x68, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73,
	0x2e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x45,
	0x6d, 0x62, 0x65, 0x64, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x55,
	0x0a, 0x13, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x68, 0x61, 0x72, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x75,
	0x6d, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x92, 0x01, 0x07, 0x22, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x73, 0x0a, 0x1b, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x75, 0x6d, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x64, 0x12, 0x54, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x33, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x68, 0x61, 0x72, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x2e, 0x45, 0x6e, 0x75, 0x6d,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x92, 0x01, 0x07, 0x22, 0x05,
	0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0xb6, 0x01, 0x0a, 0x0e, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x75, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x4d, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x68, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73,
	0x2e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x75, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x2e,
	0x56, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x9a, 0x01, 0x07,
	0x2a, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x1a, 0x55, 0x0a, 0x08,
	0x56, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x68, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e,
	0x54, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xdc, 0x01, 0x0a, 0x16, 0x4d, 0x61, 0x70, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x75, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x55,
	0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x2e, 0x68, 0x61, 0x72, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x63, 0x61, 0x73, 0x65,
	0x73, 0x2e, 0x4d, 0x61, 0x70, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x75,
	0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x2e, 0x56, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x9a, 0x01, 0x07, 0x2a, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x03, 0x76, 0x61, 0x6c, 0x1a, 0x6b, 0x0a, 0x08, 0x56, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x49, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x33, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x68, 0x61, 0x72, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x2a, 0x26, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x08,
	0x0a, 0x04, 0x5a, 0x45, 0x52, 0x4f, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x4e, 0x45, 0x10,
	0x01, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x57, 0x4f, 0x10, 0x02, 0x2a, 0x48, 0x0a, 0x0d, 0x54, 0x65,
	0x73, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x05, 0x0a, 0x01, 0x41,
	0x10, 0x00, 0x12, 0x05, 0x0a, 0x01, 0x42, 0x10, 0x01, 0x12, 0x05, 0x0a, 0x01, 0x43, 0x10, 0x02,
	0x12, 0x09, 0x0a, 0x05, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42,
	0x45, 0x54, 0x41, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x41, 0x4d, 0x4d, 0x41, 0x10, 0x02,
	0x1a, 0x02, 0x10, 0x01, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6e, 0x66, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x72, 0x65, 0x66, 0x6c,
	0x65, 0x63, 0x74, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_enums_proto_rawDescOnce sync.Once
	file_enums_proto_rawDescData = file_enums_proto_rawDesc
)

func file_enums_proto_rawDescGZIP() []byte {
	file_enums_proto_rawDescOnce.Do(func() {
		file_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_enums_proto_rawDescData)
	})
	return file_enums_proto_rawDescData
}

var file_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_enums_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_enums_proto_goTypes = []interface{}{
	(TestEnum)(0),                       // 0: tests.harness.cases.TestEnum
	(TestEnumAlias)(0),                  // 1: tests.harness.cases.TestEnumAlias
	(*EnumNone)(nil),                    // 2: tests.harness.cases.EnumNone
	(*EnumConst)(nil),                   // 3: tests.harness.cases.EnumConst
	(*EnumAliasConst)(nil),              // 4: tests.harness.cases.EnumAliasConst
	(*EnumDefined)(nil),                 // 5: tests.harness.cases.EnumDefined
	(*EnumAliasDefined)(nil),            // 6: tests.harness.cases.EnumAliasDefined
	(*EnumIn)(nil),                      // 7: tests.harness.cases.EnumIn
	(*EnumAliasIn)(nil),                 // 8: tests.harness.cases.EnumAliasIn
	(*EnumNotIn)(nil),                   // 9: tests.harness.cases.EnumNotIn
	(*EnumAliasNotIn)(nil),              // 10: tests.harness.cases.EnumAliasNotIn
	(*EnumExternal)(nil),                // 11: tests.harness.cases.EnumExternal
	(*RepeatedEnumDefined)(nil),         // 12: tests.harness.cases.RepeatedEnumDefined
	(*RepeatedExternalEnumDefined)(nil), // 13: tests.harness.cases.RepeatedExternalEnumDefined
	(*MapEnumDefined)(nil),              // 14: tests.harness.cases.MapEnumDefined
	(*MapExternalEnumDefined)(nil),      // 15: tests.harness.cases.MapExternalEnumDefined
	nil,                                 // 16: tests.harness.cases.MapEnumDefined.ValEntry
	nil,                                 // 17: tests.harness.cases.MapExternalEnumDefined.ValEntry
	(other_package.Embed_Enumerated)(0), // 18: tests.harness.cases.other_package.Embed.Enumerated
}
var file_enums_proto_depIdxs = []int32{
	0,  // 0: tests.harness.cases.EnumNone.val:type_name -> tests.harness.cases.TestEnum
	0,  // 1: tests.harness.cases.EnumConst.val:type_name -> tests.harness.cases.TestEnum
	1,  // 2: tests.harness.cases.EnumAliasConst.val:type_name -> tests.harness.cases.TestEnumAlias
	0,  // 3: tests.harness.cases.EnumDefined.val:type_name -> tests.harness.cases.TestEnum
	1,  // 4: tests.harness.cases.EnumAliasDefined.val:type_name -> tests.harness.cases.TestEnumAlias
	0,  // 5: tests.harness.cases.EnumIn.val:type_name -> tests.harness.cases.TestEnum
	1,  // 6: tests.harness.cases.EnumAliasIn.val:type_name -> tests.harness.cases.TestEnumAlias
	0,  // 7: tests.harness.cases.EnumNotIn.val:type_name -> tests.harness.cases.TestEnum
	1,  // 8: tests.harness.cases.EnumAliasNotIn.val:type_name -> tests.harness.cases.TestEnumAlias
	18, // 9: tests.harness.cases.EnumExternal.val:type_name -> tests.harness.cases.other_package.Embed.Enumerated
	0,  // 10: tests.harness.cases.RepeatedEnumDefined.val:type_name -> tests.harness.cases.TestEnum
	18, // 11: tests.harness.cases.RepeatedExternalEnumDefined.val:type_name -> tests.harness.cases.other_package.Embed.Enumerated
	16, // 12: tests.harness.cases.MapEnumDefined.val:type_name -> tests.harness.cases.MapEnumDefined.ValEntry
	17, // 13: tests.harness.cases.MapExternalEnumDefined.val:type_name -> tests.harness.cases.MapExternalEnumDefined.ValEntry
	0,  // 14: tests.harness.cases.MapEnumDefined.ValEntry.value:type_name -> tests.harness.cases.TestEnum
	18, // 15: tests.harness.cases.MapExternalEnumDefined.ValEntry.value:type_name -> tests.harness.cases.other_package.Embed.Enumerated
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_enums_proto_init() }
func file_enums_proto_init() {
	if File_enums_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_enums_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumNone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumConst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumAliasConst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumDefined); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumAliasDefined); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumAliasIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumNotIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumAliasNotIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumExternal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepeatedEnumDefined); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepeatedExternalEnumDefined); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapEnumDefined); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapExternalEnumDefined); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_enums_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_enums_proto_goTypes,
		DependencyIndexes: file_enums_proto_depIdxs,
		EnumInfos:         file_enums_proto_enumTypes,
		MessageInfos:      file_enums_proto_msgTypes,
	}.Build()
	File_enums_proto = out.File
	file_enums_proto_rawDesc = nil
	file_enums_proto_goTypes = nil
	file_enums_proto_depIdxs = nil
}
